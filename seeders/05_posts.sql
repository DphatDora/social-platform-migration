-- Seed data for posts table

INSERT INTO posts (id, community_id, author_id, title, type, content, url, media_urls, poll_data, tags, created_at, updated_at, deleted_at) VALUES

-- Post 11: Text post
(11, 17, 24, 'Golang Concurrency Patterns: Best Practices', 'text', 
'<h2>Gi·ªõi thi·ªáu v·ªÅ Concurrency trong Go</h2>
<p>Golang ƒë∆∞·ª£c thi·∫øt k·∫ø v·ªõi concurrency nh∆∞ m·ªôt t√≠nh nƒÉng c·ªët l√µi. Trong b√†i vi·∫øt n√†y, m√¨nh s·∫Ω chia s·∫ª m·ªôt s·ªë patterns v√† best practices khi l√†m vi·ªác v·ªõi goroutines v√† channels.</p>
<h3>1. Worker Pool Pattern</h3>
<pre><code>func worker(id int, jobs &lt;-chan int, results chan&lt;- int) {
    for j := range jobs {
        results &lt;- j * 2
    }
}</code></pre>
<h3>2. Fan-Out Fan-In Pattern</h3>
<p>Pattern n√†y r·∫•t h·ªØu √≠ch khi b·∫°n c·∫ßn x·ª≠ l√Ω nhi·ªÅu tasks song song v√† t·ªïng h·ª£p k·∫øt qu·∫£.</p>
<p>C√°c b·∫°n c√≥ patterns n√†o hay ho kh√¥ng? Chia s·∫ª nh√©!</p>', 
NULL, NULL, NULL, 
ARRAY['golang', 'concurrency', 'programming', 'backend'], 
NOW() - INTERVAL '45 days', NOW() - INTERVAL '44 days', NULL),

-- Post 12: Link post
(12, 18, 27, 'React 19 Beta Released - What''s New?', 'link',
'<p>React 19 beta v·ª´a ƒë∆∞·ª£c release v·ªõi nhi·ªÅu t√≠nh nƒÉng m·ªõi th√∫ v·ªã!</p>
<p>M·ªôt s·ªë highlights:</p>
<ul>
<li>React Compiler - t·ª± ƒë·ªông optimize re-renders</li>
<li>Server Components improvements</li>
<li>Actions v√† Form improvements</li>
<li>New hooks: useFormStatus, useOptimistic</li>
</ul>
<p>C√°c b·∫°n ƒë√£ th·ª≠ ch∆∞a? C·∫£m nh·∫≠n th·∫ø n√†o?</p>',
'https://react.dev/blog/2024/04/25/react-19-beta',
NULL, NULL,
ARRAY['react', 'javascript', 'frontend', 'webdev'],
NOW() - INTERVAL '42 days', NOW() - INTERVAL '41 days', NULL),

-- Post 13: Media post
(13, 19, 26, 'Kubernetes Architecture Visualization', 'media',
'<p>M√¨nh v·ª´a t·∫°o m·ªôt b·ªô diagram ƒë·ªÉ visualize ki·∫øn tr√∫c Kubernetes t·ª´ high-level ƒë·∫øn chi ti·∫øt t·ª´ng components.</p>
<p>C√°c diagrams bao g·ªìm:</p>
<ol>
<li>Overall Architecture</li>
<li>Control Plane Components</li>
<li>Worker Node Components</li>
<li>Networking Model</li>
</ol>
<p>Hy v·ªçng s·∫Ω gi√∫p √≠ch cho c√°c b·∫°n ƒëang h·ªçc K8s! üöÄ</p>',
NULL,
ARRAY['https://picsum.photos/seed/k8s1/800/600', 'https://picsum.photos/seed/k8s2/800/600', 'https://picsum.photos/seed/k8s3/800/600'],
NULL,
ARRAY['kubernetes', 'devops', 'docker', 'architecture'],
NOW() - INTERVAL '40 days', NOW() - INTERVAL '39 days', NULL),

-- Post 14: Poll post
(14, 20, 30, 'Framework n√†o b·∫°n ƒëang s·ª≠ d·ª•ng cho Python web development?', 'poll',
'<p>M√¨nh ƒëang kh·∫£o s√°t xem c·ªông ƒë·ªìng Python hi·ªán t·∫°i ƒëang s·ª≠ d·ª•ng framework n√†o nhi·ªÅu nh·∫•t.</p>
<p>Vote v√† comment l√Ω do b·∫°n ch·ªçn framework ƒë√≥ nh√©!</p>',
NULL, NULL,
'{"question": "Framework n√†o b·∫°n ƒëang s·ª≠ d·ª•ng cho Python web development?", "options": [{"id": 1, "text": "Django", "votes": 0, "voters": []}, {"id": 2, "text": "FastAPI", "votes": 0, "voters": []}, {"id": 3, "text": "Flask", "votes": 0, "voters": []}, {"id": 4, "text": "Others", "votes": 0, "voters": []}], "multiple_choice": false, "expires_at": "2025-11-30T00:00:00Z", "total_votes": 0}'::jsonb,
ARRAY['python', 'webdev', 'framework', 'poll'],
NOW() - INTERVAL '38 days', NOW() - INTERVAL '37 days', NULL),

-- Post 15: Text post
(15, 21, 31, 'Flutter vs React Native: Performance Comparison 2024', 'text',
'<h2>So s√°nh hi·ªáu nƒÉng Flutter v√† React Native</h2>
<p>Sau khi develop 2 apps t∆∞∆°ng t·ª± nhau b·∫±ng c·∫£ Flutter v√† React Native, m√¨nh c√≥ m·ªôt s·ªë nh·∫≠n x√©t:</p>
<h3>üéØ Flutter</h3>
<ul>
<li><strong>Pros:</strong> Smooth animations, consistent performance, hot reload c·ª±c nhanh</li>
<li><strong>Cons:</strong> App size l·ªõn h∆°n, learning curve h∆°i d·ªëc</li>
</ul>
<h3>‚öõÔ∏è React Native</h3>
<ul>
<li><strong>Pros:</strong> Ecosystem l·ªõn, d·ªÖ t√¨m developer, integration v·ªõi web code</li>
<li><strong>Cons:</strong> Performance kh√¥ng ·ªïn ƒë·ªãnh b·∫±ng, ph·ª• thu·ªôc nhi·ªÅu v√†o native modules</li>
</ul>
<h3>K·∫øt lu·∫≠n</h3>
<p>T√πy v√†o project v√† team m√† ch·ªçn framework ph√π h·ª£p. C√°c b·∫°n nghƒ© sao?</p>',
NULL, NULL, NULL,
ARRAY['flutter', 'react-native', 'mobile', 'performance'],
NOW() - INTERVAL '35 days', NOW() - INTERVAL '34 days', NULL),

-- Post 16: Link post
(16, 22, 32, 'OWASP Top 10 2024: Critical Web Application Security Risks', 'link',
'<p><strong>‚ö†Ô∏è OWASP Top 10 ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t cho nƒÉm 2024!</strong></p>
<p>M·ªôt s·ªë thay ƒë·ªïi ƒë√°ng ch√∫ √Ω:</p>
<ul>
<li>Broken Access Control v·∫´n gi·ªØ v·ªã tr√≠ #1</li>
<li>Cryptographic Failures tƒÉng h·∫°ng</li>
<li>Software and Data Integrity Failures - category m·ªõi</li>
</ul>
<p>Developers c·∫ßn update ki·∫øn th·ª©c security ngay ƒë·ªÉ protect ·ª©ng d·ª•ng c·ªßa m√¨nh!</p>
<p>Link: Chi ti·∫øt t·ª´ng vulnerability v√† c√°ch ph√≤ng ch·ªëng üëá</p>',
'https://owasp.org/www-project-top-ten/',
NULL, NULL,
ARRAY['security', 'owasp', 'web-security', 'best-practices'],
NOW() - INTERVAL '32 days', NOW() - INTERVAL '31 days', NULL),

-- Post 17: Text post
(17, 23, 38, 'Introduction to Transformer Architecture', 'text',
'<h1>Understanding Transformer Architecture</h1>
<p>Transformer ƒë√£ c√°ch m·∫°ng h√≥a NLP v√† hi·ªán ƒëang ƒë∆∞·ª£c apply cho nhi·ªÅu domains kh√°c nh∆∞ Computer Vision, Speech Processing...</p>
<h2>Key Components</h2>
<h3>1. Self-Attention Mechanism</h3>
<p>Cho ph√©p model "nh√¨n" to√†n b·ªô input sequence v√† h·ªçc ƒë∆∞·ª£c relationships gi·ªØa c√°c elements.</p>
<pre><code>Attention(Q, K, V) = softmax(QK^T / ‚àöd_k)V</code></pre>
<h3>2. Multi-Head Attention</h3>
<p>Cho ph√©p model attend to information t·ª´ nhi·ªÅu representation subspaces kh√°c nhau.</p>
<h3>3. Positional Encoding</h3>
<p>V√¨ Transformer kh√¥ng c√≥ recurrence, c·∫ßn positional encoding ƒë·ªÉ bi·∫øt v·ªã tr√≠ c·ªßa t·ª´ng token.</p>
<p>M√¨nh s·∫Ω c√≥ b√†i follow-up v·ªÅ implementation chi ti·∫øt. Stay tuned! üöÄ</p>',
NULL, NULL, NULL,
ARRAY['machine-learning', 'deep-learning', 'nlp', 'ai'],
NOW() - INTERVAL '30 days', NOW() - INTERVAL '29 days', NULL),

-- Post 18: Poll post
(18, 24, 34, 'Blockchain platform n√†o b·∫°n ƒëang develop?', 'poll',
'<p>Web3 development ƒëang r·∫•t hot. M√¨nh mu·ªën bi·∫øt c√°c b·∫°n ƒëang focus v√†o platform n√†o?</p>
<p>Multiple choice nha, v√¨ nhi·ªÅu ng∆∞·ªùi dev tr√™n nhi·ªÅu chains!</p>',
NULL, NULL,
'{"question": "Blockchain platform n√†o b·∫°n ƒëang develop?", "options": [{"id": 1, "text": "Ethereum", "votes": 0, "voters": []}, {"id": 2, "text": "Solana", "votes": 0, "voters": []}, {"id": 3, "text": "Polygon", "votes": 0, "voters": []}, {"id": 4, "text": "Binance Smart Chain", "votes": 0, "voters": []}, {"id": 5, "text": "Others", "votes": 0, "voters": []}], "multiple_choice": true, "expires_at": "2025-12-15T00:00:00Z", "total_votes": 0}'::jsonb,
ARRAY['blockchain', 'web3', 'crypto', 'smart-contracts'],
NOW() - INTERVAL '28 days', NOW() - INTERVAL '27 days', NULL),

-- Post 19: Media post
(19, 25, 37, 'UI Design System Components Showcase', 'media',
'<h2>Design System cho Web App</h2>
<p>M√¨nh v·ª´a ho√†n th√†nh design system cho m·ªôt project, bao g·ªìm:</p>
<ul>
<li>Color palette v√† typography system</li>
<li>Component library (buttons, inputs, cards...)</li>
<li>Icon set</li>
<li>Grid system v√† spacing scale</li>
</ul>
<p>All designed in Figma v·ªõi complete documentation!</p>
<p>Feedback welcome! üé®‚ú®</p>',
NULL,
ARRAY['https://picsum.photos/seed/design1/800/600', 'https://picsum.photos/seed/design2/800/600', 'https://picsum.photos/seed/design3/800/600', 'https://picsum.photos/seed/design4/800/600'],
NULL,
ARRAY['ui-design', 'design-system', 'figma', 'ux'],
NOW() - INTERVAL '25 days', NOW() - INTERVAL '24 days', NULL),

-- Post 20: Text post
(20, 26, 28, 'Microservices Architecture: Lessons Learned', 'text',
'<h1>5 NƒÉm v·ªõi Microservices: Nh·ªØng b√†i h·ªçc x∆∞∆°ng m√°u</h1>
<p>Sau 5 nƒÉm migrate t·ª´ monolith sang microservices, m√¨nh mu·ªën chia s·∫ª m·ªôt s·ªë lessons learned:</p>
<h2>‚úÖ Nh·ªØng g√¨ l√†m t·ªët</h2>
<ol>
<li><strong>Service Boundaries:</strong> ƒê·ªãnh nghƒ©a r√µ r√†ng bounded context theo DDD</li>
<li><strong>API Gateway:</strong> Centralized authentication v√† routing</li>
<li><strong>Event-Driven Architecture:</strong> Loose coupling gi·ªØa c√°c services</li>
<li><strong>Observability:</strong> Distributed tracing v·ªõi Jaeger/Zipkin</li>
</ol>
<h2>‚ùå Nh·ªØng sai l·∫ßm</h2>
<ol>
<li>T√°ch services qu√° nh·ªè ngay t·ª´ ƒë·∫ßu</li>
<li>Kh√¥ng invest ƒë·ªß v√†o monitoring/logging</li>
<li>Underestimate complexity c·ªßa distributed transactions</li>
</ol>
<h2>üí° Recommendations</h2>
<p>ƒê·ª´ng b·∫Øt ƒë·∫ßu v·ªõi microservices n·∫øu team nh·ªè v√† product ch∆∞a PMF. Start with modular monolith!</p>',
NULL, NULL, NULL,
ARRAY['microservices', 'architecture', 'backend', 'lessons-learned'],
NOW() - INTERVAL '22 days', NOW() - INTERVAL '21 days', NULL),

-- Post 21: Link post
(21, 27, 33, 'Playwright: The Future of E2E Testing', 'link',
'<p>Playwright ƒë√£ tr·ªü th√†nh favorite E2E testing framework c·ªßa m√¨nh!</p>
<h3>Why Playwright?</h3>
<ul>
<li>‚úÖ Cross-browser testing (Chromium, Firefox, WebKit)</li>
<li>‚úÖ Auto-wait mechanism - no more flaky tests</li>
<li>‚úÖ Powerful selectors v√† assertions</li>
<li>‚úÖ Built-in test runner v·ªõi parallel execution</li>
<li>‚úÖ Trace viewer for debugging</li>
</ul>
<p>So v·ªõi Cypress th√¨ Playwright:</p>
<ul>
<li>Native multi-browser support</li>
<li>Better handling c·ªßa multiple tabs/windows</li>
<li>Faster execution</li>
</ul>
<p>Guide ƒë·∫ßy ƒë·ªß ·ªü link d∆∞·ªõi! üé≠</p>',
'https://playwright.dev/docs/intro',
NULL, NULL,
ARRAY['testing', 'e2e', 'playwright', 'qa', 'automation'],
NOW() - INTERVAL '20 days', NOW() - INTERVAL '19 days', NULL),

-- Post 22: Text post
(22, 28, 36, 'AWS Cost Optimization Tips', 'text',
'<h1>üí∞ Ti·∫øt ki·ªám 40% AWS bill v·ªõi nh·ªØng tips n√†y</h1>
<p>Team m√¨nh v·ª´a optimize ƒë∆∞·ª£c AWS cost t·ª´ $15k/month xu·ªëng $9k/month. ƒê√¢y l√† nh·ªØng g√¨ ch√∫ng m√¨nh ƒë√£ l√†m:</p>
<h2>1. Right-sizing EC2 Instances</h2>
<p>S·ª≠ d·ª•ng AWS Compute Optimizer ƒë·ªÉ identify underutilized instances. Downsize ho·∫∑c switch sang ARM-based Graviton instances.</p>
<h2>2. Reserved Instances & Savings Plans</h2>
<p>Commit 1-3 nƒÉm cho stable workloads = save up to 72%</p>
<h2>3. S3 Lifecycle Policies</h2>
<pre><code>- Standard ‚Üí IA after 30 days
- IA ‚Üí Glacier after 90 days
- Delete old logs after 1 year</code></pre>
<h2>4. Lambda Optimization</h2>
<ul>
<li>Increase memory ƒë·ªÉ reduce execution time (paradox nh∆∞ng th·ª±c s·ª± save cost!)</li>
<li>Use Lambda@Edge thay v√¨ EC2 cho simple tasks</li>
</ul>
<h2>5. CloudFront & Caching</h2>
<p>Reduce origin requests = reduce data transfer costs</p>
<p>C√°c b·∫°n c√≥ tips n√†o kh√°c kh√¥ng? Share nh√©!</p>',
NULL, NULL, NULL,
ARRAY['aws', 'cloud', 'cost-optimization', 'devops'],
NOW() - INTERVAL '18 days', NOW() - INTERVAL '17 days', NULL),

-- Post 23: Poll post
(23, 29, 34, 'Tech stack n√†o b·∫°n recommend cho ng∆∞·ªùi m·ªõi?', 'poll',
'<p>Nhi·ªÅu b·∫°n newbie h·ªèi m√¨nh n√™n h·ªçc tech stack n√†o. C√πng vote ƒë·ªÉ c√≥ data nh√©!</p>
<p>Ch·ªçn stack b·∫°n recommend cho beginners trong 2024-2025:</p>',
NULL, NULL,
'{"question": "Tech stack n√†o b·∫°n recommend cho ng∆∞·ªùi m·ªõi?", "options": [{"id": 1, "text": "MERN (MongoDB, Express, React, Node)", "votes": 0, "voters": []}, {"id": 2, "text": "Django + React/Vue", "votes": 0, "voters": []}, {"id": 3, "text": "Spring Boot + React", "votes": 0, "voters": []}, {"id": 4, "text": "Laravel + Vue", "votes": 0, "voters": []}, {"id": 5, "text": "Go + React", "votes": 0, "voters": []}], "multiple_choice": false, "expires_at": "2025-12-31T00:00:00Z", "total_votes": 0}'::jsonb,
ARRAY['career', 'beginner', 'tech-stack', 'advice'],
NOW() - INTERVAL '15 days', NOW() - INTERVAL '14 days', NULL),

-- Post 24: Text post
(24, 30, 28, 'MVP Development: Speed vs Quality', 'text',
'<h1>Building MVP: The Art of Balancing ‚öñÔ∏è</h1>
<p>Startup c·ªßa m√¨nh v·ª´a launch MVP sau 3 th√°ng development. ƒê√¢y l√† approach c·ªßa team:</p>
<h2>üöÄ What we did RIGHT</h2>
<h3>1. Tech Stack ƒë∆°n gi·∫£n</h3>
<ul>
<li>Monolith thay v√¨ microservices</li>
<li>PostgreSQL cho m·ªçi th·ª© (no NoSQL yet)</li>
<li>Deploy tr√™n Railway (no AWS complexity)</li>
</ul>
<h3>2. Feature Prioritization</h3>
<p>Brutal prioritization: Ch·ªâ build nh·ªØng g√¨ TH·ª∞C S·ª∞ c·∫ßn cho core value proposition.</p>
<h3>3. Code Quality ·ªü m·ª©c "acceptable"</h3>
<ul>
<li>‚úÖ Critical paths c√≥ tests</li>
<li>‚úÖ Error handling ƒë·∫ßy ƒë·ªß</li>
<li>‚ùå Kh√¥ng over-engineer</li>
<li>‚ùå Kh√¥ng premature optimization</li>
</ul>
<h2>üí° Key Takeaway</h2>
<p><em>"Perfect is the enemy of done"</em> - Nh∆∞ng "Done" kh√¥ng c√≥ nghƒ©a l√† "Broken"</p>
<p>Ship fast, learn faster, iterate! üéØ</p>',
NULL, NULL, NULL,
ARRAY['startup', 'mvp', 'product-development', 'lessons'],
NOW() - INTERVAL '12 days', NOW() - INTERVAL '11 days', NULL),

-- Post 25: Media post
(25, 31, 25, 'Code Review Checklist - Visual Guide', 'media',
'<h2>üìã Comprehensive Code Review Checklist</h2>
<p>M√¨nh t·∫°o m·ªôt b·ªô visual checklist cho code review process, cover:</p>
<ol>
<li><strong>Code Quality:</strong> Readability, naming conventions, complexity</li>
<li><strong>Logic & Bugs:</strong> Edge cases, error handling, race conditions</li>
<li><strong>Performance:</strong> Algorithm efficiency, database queries, memory leaks</li>
<li><strong>Security:</strong> Input validation, authentication, data exposure</li>
<li><strong>Testing:</strong> Test coverage, test quality, edge case handling</li>
<li><strong>Documentation:</strong> Comments, README, API docs</li>
</ol>
<p>Print ra d√°n t∆∞·ªùng ho·∫∑c save l√†m reference nh√©! üìå</p>',
NULL,
ARRAY['https://picsum.photos/seed/checklist1/800/1200', 'https://picsum.photos/seed/checklist2/800/1200'],
NULL,
ARRAY['code-review', 'best-practices', 'quality', 'checklist'],
NOW() - INTERVAL '10 days', NOW() - INTERVAL '9 days', NULL),

-- Post 26: Text post
(26, 26, 24, 'Database Indexing Strategies', 'text',
'<h1>üóÑÔ∏è Database Indexing: From Zero to Hero</h1>
<p>Optimize database performance b·∫±ng proper indexing!</p>
<h2>Types of Indexes</h2>
<h3>1. B-Tree Index (Default)</h3>
<p>T·ªët cho: equality v√† range queries</p>
<pre><code>CREATE INDEX idx_user_email ON users(email);</code></pre>
<h3>2. Hash Index</h3>
<p>T·ªët cho: equality queries only, nhanh h∆°n B-tree</p>
<h3>3. Composite Index</h3>
<pre><code>CREATE INDEX idx_user_created ON users(created_at, status);</code></pre>
<p><strong>L∆∞u √Ω:</strong> Th·ª© t·ª± columns quan tr·ªçng!</p>
<h3>4. Partial Index</h3>
<pre><code>CREATE INDEX idx_active_users ON users(email) WHERE is_active = true;</code></pre>
<h2>‚ö†Ô∏è Index Anti-patterns</h2>
<ul>
<li>‚ùå Index m·ªçi column</li>
<li>‚ùå Index on low-cardinality columns (boolean, gender...)</li>
<li>‚ùå Kh√¥ng maintain indexes (rebuild ƒë·ªãnh k·ª≥)</li>
</ul>
<h2>üìä Monitoring</h2>
<p>Use EXPLAIN ANALYZE ƒë·ªÉ check query plans!</p>',
NULL, NULL, NULL,
ARRAY['database', 'postgresql', 'performance', 'indexing'],
NOW() - INTERVAL '8 days', NOW() - INTERVAL '7 days', NULL),

-- Post 27: Link post
(27, 17, 25, 'Go 1.22 Release Notes - Major Updates', 'link',
'<p>üéâ Go 1.22 is here with some exciting features!</p>
<h3>Highlights:</h3>
<ul>
<li><strong>Range over integers:</strong> <code>for i := range 10 { ... }</code></li>
<li><strong>Enhanced routing patterns</strong> in http.ServeMux</li>
<li><strong>Improved type inference</strong> for generic functions</li>
<li><strong>Memory optimization</strong> - reduced GC overhead</li>
</ul>
<p>The routing patterns update is game-changing cho HTTP servers! üöÄ</p>',
'https://go.dev/doc/go1.22',
NULL, NULL,
ARRAY['golang', 'release', 'updates', 'programming'],
NOW() - INTERVAL '6 days', NOW() - INTERVAL '5 days', NULL),

-- Post 28: Text post
(28, 22, 32, 'Common Security Mistakes in JWT Implementation', 'text',
'<h1>üîê JWT Security: Nh·ªØng sai l·∫ßm ph·ªï bi·∫øn</h1>
<p>JWT r·∫•t convenient nh∆∞ng d·ªÖ implement sai. ƒê√¢y l√† nh·ªØng l·ªói m√¨nh hay g·∫∑p:</p>
<h2>1. ‚ùå Algorithm Confusion Attack</h2>
<pre><code>// WRONG - accept any algorithm
jwt.verify(token, secret);

// CORRECT - specify algorithm
jwt.verify(token, secret, { algorithms: [''HS256''] });</code></pre>
<h2>2. ‚ùå Storing Sensitive Data in Payload</h2>
<p>JWT payload ch·ªâ ƒë∆∞·ª£c encode (base64), KH√îNG encrypted!</p>
<pre><code>// NEVER DO THIS
const payload = {
  userId: 1,
  password: ''secret123'',  // ‚ùå
  creditCard: ''1234-5678''  // ‚ùå
};</code></pre>
<h2>3. ‚ùå No Token Expiration</h2>
<pre><code>// ALWAYS set expiration
const token = jwt.sign(payload, secret, { 
  expiresIn: ''15m''  // or ''1h'', ''7d''...
});</code></pre>
<h2>4. ‚ùå Weak Secret Keys</h2>
<p>S·ª≠ d·ª•ng strong random keys (min 256 bits cho HS256)</p>
<h2>5. ‚ùå No Token Revocation Strategy</h2>
<p>Implement blacklist ho·∫∑c use short-lived access tokens + refresh tokens</p>
<h3>üéØ Best Practice</h3>
<ul>
<li>Access token: 15 minutes</li>
<li>Refresh token: 7 days</li>
<li>Store refresh token in httpOnly cookie</li>
</ul>',
NULL, NULL, NULL,
ARRAY['security', 'jwt', 'authentication', 'web-security'],
NOW() - INTERVAL '5 days', NOW() - INTERVAL '4 days', NULL),

-- Post 29: Poll post
(29, 18, 27, 'State Management library n√†o b·∫°n ƒëang d√πng?', 'poll',
'<p>React state management c√≥ nhi·ªÅu l·ª±a ch·ªçn. B·∫°n ƒëang d√πng g√¨?</p>
<p>C√≥ th·ªÉ ch·ªçn nhi·ªÅu options n·∫øu b·∫°n d√πng kh√°c nhau cho c√°c projects!</p>',
NULL, NULL,
'{"question": "State Management library n√†o b·∫°n ƒëang d√πng?", "options": [{"id": 1, "text": "Redux Toolkit", "votes": 0, "voters": []}, {"id": 2, "text": "Zustand", "votes": 0, "voters": []}, {"id": 3, "text": "Jotai", "votes": 0, "voters": []}, {"id": 4, "text": "Recoil", "votes": 0, "voters": []}, {"id": 5, "text": "Context API only", "votes": 0, "voters": []}, {"id": 6, "text": "MobX", "votes": 0, "voters": []}], "multiple_choice": true, "expires_at": "2025-11-20T00:00:00Z", "total_votes": 0}'::jsonb,
ARRAY['react', 'state-management', 'frontend', 'poll'],
NOW() - INTERVAL '4 days', NOW() - INTERVAL '3 days', NULL),

-- Post 30: Text post
(30, 29, 35, 'T·ª´ zero ƒë·∫øn dev job ƒë·∫ßu ti√™n: H√†nh tr√¨nh 8 th√°ng', 'text',
'<h1>üéì Career Switch th√†nh c√¥ng sau 8 th√°ng!</h1>
<p>M√¨nh v·ª´a nh·∫≠n offer cho dev job ƒë·∫ßu ti√™n! Mu·ªën share journey ƒë·ªÉ inspire c√°c b·∫°n ƒëang h·ªçc:</p>
<h2>üìö Learning Path</h2>
<h3>Th√°ng 1-2: Fundamentals</h3>
<ul>
<li>HTML, CSS, JavaScript basics</li>
<li>Git & GitHub</li>
<li>CS fundamentals (data structures, algorithms)</li>
</ul>
<h3>Th√°ng 3-4: Deep Dive</h3>
<ul>
<li>React (hooks, routing, state management)</li>
<li>Node.js + Express</li>
<li>PostgreSQL</li>
</ul>
<h3>Th√°ng 5-6: Projects</h3>
<ul>
<li>Todo app (classic ƒë·∫ßu tay üòÖ)</li>
<li>E-commerce clone</li>
<li>Chat application v·ªõi WebSocket</li>
</ul>
<h3>Th√°ng 7-8: Job Hunting</h3>
<ul>
<li>Polish CV & GitHub</li>
<li>LeetCode grinding (50+ problems)</li>
<li>Apply 100+ positions ‚Üí 15 interviews ‚Üí 3 offers</li>
</ul>
<h2>üí° Tips</h2>
<ol>
<li><strong>Consistency > Intensity:</strong> Code m·ªói ng√†y, d√π ch·ªâ 1 gi·ªù</li>
<li><strong>Build in public:</strong> Share progress on LinkedIn/Twitter</li>
<li><strong>Network:</strong> Join communities, attend meetups</li>
<li><strong>Don''t tutorial hell:</strong> Build projects ASAP</li>
</ol>
<h2>üôè Gratitude</h2>
<p>C·∫£m ∆°n c·ªông ƒë·ªìng ƒë√£ support! M√¨nh s·∫Ω continue sharing v√† help newcomers!</p>
<p>C√°c b·∫°n ƒëang h·ªçc c√≥ c√¢u h·ªèi g√¨ kh√¥ng? AMA! üí™</p>',
NULL, NULL, NULL,
ARRAY['career', 'beginner', 'success-story', 'motivation'],
NOW() - INTERVAL '2 days', NOW() - INTERVAL '1 day', NULL);

-- Reset sequence
SELECT setval('posts_id_seq', 30, true);
